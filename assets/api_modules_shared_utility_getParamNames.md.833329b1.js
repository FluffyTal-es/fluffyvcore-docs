import{_ as a,c as r,x as e,a as n,t as s,S as o,o as i}from"./chunks/framework.175b5f45.js";const P=JSON.parse('{"title":"AthenaShared.utility.getParamNames","description":"","frontmatter":{"title":"AthenaShared.utility.getParamNames","outline":[1,3],"order":0},"headers":[],"relativePath":"api/modules/shared_utility_getParamNames.md","lastUpdated":null}'),d={name:"api/modules/shared_utility_getParamNames.md"},l={id:"frontmatter-title",tabindex:"-1"},c=e("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1),m=o('<h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><h3 id="getparamnames" tabindex="-1">getParamNames <a class="header-anchor" href="#getparamnames" aria-label="Permalink to &quot;getParamNames&quot;">​</a></h3><p>▸ <strong>getParamNames</strong>(<code>func</code>): <code>string</code>[]</p><p>Used to reflect names of parameters from a given function. Returns an array of parameter names.</p><p><strong><code>Export</code></strong></p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>func</code></td><td style="text-align:left;"><code>Function</code></td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>string</code>[]</p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/627294b/src/core/shared/utility/getParamNames.ts#L12" target="_blank" rel="noreferrer">shared/utility/getParamNames.ts:12</a></p>',11);function h(t,u,f,_,p,g){return i(),r("div",null,[e("h1",l,[n(s(t.$frontmatter.title)+" ",1),c]),m])}const y=a(d,[["render",h]]);export{P as __pageData,y as default};
