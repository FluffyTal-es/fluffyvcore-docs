import{_ as r,c as d,o as n,V as a,C as e,a as t}from"./chunks/framework.be58fd72.js";const T=JSON.parse('{"title":"AthenaShared.utility.extractStringKeys.Internal","description":"","frontmatter":{"title":"AthenaShared.utility.extractStringKeys.Internal","outline":[1,3],"order":0},"headers":[],"relativePath":"api/modules/shared_utility_extractStringKeys_Internal.md","lastUpdated":null}'),i={name:"api/modules/shared_utility_extractStringKeys_Internal.md"},l=a('<h1 id="athenashared-utility-extractstringkeys-internal" tabindex="-1">AthenaShared.utility.extractStringKeys.Internal <a class="header-anchor" href="#athenashared-utility-extractstringkeys-internal" aria-label="Permalink to &quot;AthenaShared.utility.extractStringKeys.Internal&quot;">​</a></h1><h2 id="type-aliases" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h2><h3 id="extract" tabindex="-1">Extract <a class="header-anchor" href="#extract" aria-label="Permalink to &quot;Extract&quot;">​</a></h3><p>Ƭ <strong>Extract</strong>&lt;<code>T</code>, <code>U</code>&gt;: <code>T</code> extends <code>U</code> ? <code>T</code> : <code>never</code></p><p>Extract from T those types that are assignable to U</p><h4 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr><tr><td style="text-align:left;"><code>U</code></td></tr></tbody></table><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>../../node_modules/typescript/lib/lib.es5.d.ts:1571</p><hr><h3 id="record" tabindex="-1">Record <a class="header-anchor" href="#record" aria-label="Permalink to &quot;Record&quot;">​</a></h3>',11),o=e("p",{"[P":"",in:"","K]:":"",T:""},[t("Ƭ "),e("strong",null,"Record"),t("<"),e("code",null,"K"),t(", "),e("code",null,"T"),t(">:")],-1),s=a('<p>Construct a type with a set of properties K of type T</p><h4 id="type-parameters-1" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-1" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>K</code></td><td style="text-align:left;">extends keyof <code>any</code></td></tr><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>../../node_modules/typescript/lib/lib.es5.d.ts:1559</p>',5),c=[l,o,s];function h(p,_,y,u,x,f){return n(),d("div",null,c)}const b=r(i,[["render",h]]);export{T as __pageData,b as default};
