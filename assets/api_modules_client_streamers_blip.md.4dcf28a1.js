import{_ as a,c as r,x as e,a as i,t as l,S as n,o}from"./chunks/framework.175b5f45.js";const g=JSON.parse('{"title":"AthenaClient.streamers.blip","description":"","frontmatter":{"title":"AthenaClient.streamers.blip","outline":[1,3],"order":0},"headers":[],"relativePath":"api/modules/client_streamers_blip.md","lastUpdated":null}'),s={name:"api/modules/client_streamers_blip.md"},d={id:"frontmatter-title",tabindex:"-1"},h=e("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1),c=n('<h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><h3 id="append" tabindex="-1">append <a class="header-anchor" href="#append" aria-label="Permalink to &quot;append&quot;">​</a></h3><p>::: Tip AthenaClient.streamers.blip.<strong>append</strong>(<code>blipData</code>): <code>alt.PointBlip</code> :::</p><p>Adds a blip manually to the blip controller.</p><p><strong><code>Export</code></strong></p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>blipData</code></td><td style="text-align:left;"><code>Blip</code></td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>alt.PointBlip</code></p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/6013452/src/core/client/streamers/blip.ts#L46" target="_blank" rel="noreferrer">client/streamers/blip.ts:46</a></p><hr><h3 id="remove" tabindex="-1">remove <a class="header-anchor" href="#remove" aria-label="Permalink to &quot;remove&quot;">​</a></h3><p>::: Tip AthenaClient.streamers.blip.<strong>remove</strong>(<code>uid</code>): <code>void</code> :::</p><p>Remove a blip from the list of added blips.</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>uid</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">A unique string - The unique identifier of the blip.</td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><p>The blip object.</p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/6013452/src/core/client/streamers/blip.ts#L68" target="_blank" rel="noreferrer">client/streamers/blip.ts:68</a></p>',22);function p(t,b,m,u,f,_){return o(),r("div",null,[e("h1",d,[i(l(t.$frontmatter.title)+" ",1),h]),c])}const q=a(s,[["render",p]]);export{g as __pageData,q as default};
