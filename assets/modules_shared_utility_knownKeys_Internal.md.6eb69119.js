import{_ as e,o as t,c as a,V as n}from"./chunks/framework.7ae304b1.js";const f=JSON.parse('{"title":"FluffyVShared.utility.knownKeys.Internal","description":"","frontmatter":{"title":"FluffyVShared.utility.knownKeys.Internal","outline":[0,5],"order":0},"headers":[],"relativePath":"modules/shared_utility_knownKeys_Internal.md","filePath":"modules/shared_utility_knownKeys_Internal.md","lastUpdated":null}'),l={name:"modules/shared_utility_knownKeys_Internal.md"},r=n('<h1 id="fluffyvshared-utility-knownkeys-internal" tabindex="-1">FluffyVShared.utility.knownKeys.Internal <a class="header-anchor" href="#fluffyvshared-utility-knownkeys-internal" aria-label="Permalink to &quot;FluffyVShared.utility.knownKeys.Internal&quot;">​</a></h1><h2 id="type-aliases" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h2><h3 id="exclude" tabindex="-1">Exclude <a class="header-anchor" href="#exclude" aria-label="Permalink to &quot;Exclude&quot;">​</a></h3><p>Ƭ <strong>Exclude</strong>&lt;<code>T</code>, <code>U</code>&gt;: <code>T</code> extends <code>U</code> ? <code>never</code> : <code>T</code></p><p>Exclude from T those types that are assignable to U</p><h4 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr><tr><td style="text-align:left;"><code>U</code></td></tr></tbody></table><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>../../node_modules/typescript/lib/lib.es5.d.ts:1566</p>',9),d=[r];function o(s,i,c,h,u,y){return t(),a("div",null,d)}const p=e(l,[["render",o]]);export{f as __pageData,p as default};
