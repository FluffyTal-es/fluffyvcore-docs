import{_ as t,c as n,a as s,b as e,t as l,d as o,o as p}from"./app.3cd5f395.js";const g=JSON.parse('{"title":".hash","description":"","frontmatter":{"title":".hash","order":0},"headers":[{"level":3,"title":"Athena.utility.hash.sha256","slug":"athena-utility-hash-sha256","link":"#athena-utility-hash-sha256","children":[]},{"level":3,"title":"Athena.utility.hash.sha256Random","slug":"athena-utility-hash-sha256random","link":"#athena-utility-hash-sha256random","children":[]},{"level":3,"title":"Athena.utility.hash.hashPassword","slug":"athena-utility-hash-hashpassword","link":"#athena-utility-hash-hashpassword","children":[]},{"level":3,"title":"Athena.utility.hash.testPassword","slug":"athena-utility-hash-testpassword","link":"#athena-utility-hash-testpassword","children":[]}],"relativePath":"api-server/utility/hash.md"}'),r={name:"api-server/utility/hash.md"},h={id:"frontmatter-title",tabindex:"-1"},i=s("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),c=o(`<p>Contains hashing related functionality such as password hashing, and two iterations of a sha256.</p><h3 id="athena-utility-hash-sha256" tabindex="-1">Athena.utility.hash.sha256 <a class="header-anchor" href="#athena-utility-hash-sha256" aria-hidden="true">#</a></h3><p>A simple <code>sha256</code> function that takes data in a string format and returns a <code>sha256</code>. It will be the same hash as long as the data originally used in the function is the same data. <strong>Do not use this for passwords</strong>.</p><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Athena</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">utility</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">hash</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sha256</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hello world</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="athena-utility-hash-sha256random" tabindex="-1">Athena.utility.hash.sha256Random <a class="header-anchor" href="#athena-utility-hash-sha256random" aria-hidden="true">#</a></h3><p>Same as above, but the hash will always be random but not unique. Good for quick temporary random hash strings.</p><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Athena</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">utility</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">hash</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sha256Random</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hello world</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="athena-utility-hash-hashpassword" tabindex="-1">Athena.utility.hash.hashPassword <a class="header-anchor" href="#athena-utility-hash-hashpassword" aria-hidden="true">#</a></h3><p>Used to take a plain text password and hash it with pbkdf2 and a salt. <strong>Safe to password storage</strong>.</p><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> hashedPassword </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Athena</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">utility</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">hash</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">hashPassword</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">mypasswordhere</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="athena-utility-hash-testpassword" tabindex="-1">Athena.utility.hash.testPassword <a class="header-anchor" href="#athena-utility-hash-testpassword" aria-hidden="true">#</a></h3><p>A password can be compared by getting the original hash and comparing it against the plain-text provided from the user.</p><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> originalPassword </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">mypasswordhere</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> isValid </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Athena</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">utility</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">hash</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">testPassword</span><span style="color:#A6ACCD;">(originalPassword</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> hashedPassword)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div>`,13);function d(a,y,D,A,u,F){return p(),n("div",null,[s("h1",h,[e(l(a.$frontmatter.title)+" ",1),i]),c])}const w=t(r,[["render",d]]);export{g as __pageData,w as default};
