const e=/[^a-zA-Z0-9._ ]+/g,t=[{title:"Discord Auth",content:"auth ",link:"/auth/index"},{title:"About Blog Posts",content:"  frontmatter.title these posts are meant to highlight some changes and decision making during the creation of the athena framework.they offer a better understanding into the authors mindset and the general usecase associated with how a feature was introduced.the latest posts are always at the top.",link:"/blog/index"},{title:"Why Create Overrides?",content:"  frontmatter.title  written on march 11 2023over the course of several years while writing the athena framework there was something developers were doing that was against the fundamentals of this framework.that was to not change the core code base when using it.when a developer changes the core code and they are not familiar with merge conflicts it can become difficult to upgrade to newer versions of athena which may include better performance cleaner code or simply put a better api to work with. what did i try and why it didnt worklets talk about what i tried to do first while writing this framework.in v4 i had introduced a concept called injections.injections were meant to be a way for developers to add small pieces of data into the core functions. the injection code itself would be added to individual functions based on a developer saying hey can i get an injection added here. now you can understand how quickly the amount of injections being added would spiral out of control and become incredibly messy.injections were a pathway to spaghetti code and awful understanding of how they work.they were also quite limiting when i am trying to decrease limitations while using this framework. why are they awfulthe injections themselves were described as follows add functionality to the beginning of a function add functionality to the end of a functionhowever this limiting functionality would also prevent you from making any additional changes to anything that happened in between.you were effectively writing code that would work backwards to potentially remove whatever was happening inside of that function. where are we goinginjections are removed in v5 and have now be replaced with overrides instead.overrides allow you to take the original function and essentially fork it in your own plugin.this allows you to fully change the function without ever changing core.this is important because now you can write a plugin that overrides a specific function to extend it even further beyond its current capabilities. how does it workin the athena api pathway you will find a function called override in almost every file. this one function will let you override any other function that is inside of that specific file.lets take for example the following function from srccoreservervehiclespawn.ts.this function creates a temporary vehicle that can be despawned on leave if desired.this vehicle can be accessed by anyone and remains in the server until restart or despawn.tsexport function temporaryvehicleinfo vehiclespawninfo deleteonleave  false alt.vehicle     if overrides.temporary         return overrides.temporaryvehicleinfo deleteonleave        const vehicle  new alt.vehiclevehicleinfo.model vehicleinfo.pos vehicleinfo.rot    vehicle.manualenginecontrol  true    athena.vehicle.tempvehicles.addvehicle  deleteonleave     if vehicleinfo.data         athena.vehicle.tuning.applystatevehicle vehicleinfo.data        athena.vehicle.events.triggervehiclespawned vehicle    return vehiclenow lets say that i want to modify this function and log all temporary vehicles that are created.i can do this by using an override on the function itself.tsathena.vehicle.spawn.overridetemporary vehicleinfo deleteonleave      after introducing this override i can now add the additional logging information by modifying the original function.i am essentially performing a copy and paste of the original logic inside of this function and then changing it.this is done entirely through a plugin at this point.tsathena.vehicle.spawn.overridetemporary vehicleinfo deleteonleave       always remove the override at the top    const vehicle  new alt.vehiclevehicleinfo.model vehicleinfo.pos vehicleinfo.rot    vehicle.manualenginecontrol  true    athena.vehicle.tempvehicles.addvehicle  deleteonleave     if vehicleinfo.data         athena.vehicle.tuning.applystatevehicle vehicleinfo.data         this is what i wanted to add    alt.loga temporary vehicle with vehicleinfo.model was created    athena.vehicle.events.triggervehiclespawned vehicle    return vehiclethats it thats how i solved it.now when you run the main function athena.vehicle.spawn.temporary it will call the override function instead of the main function.you can now override almost any function in the framework in v5 and this lowers the time necessary to upgrade to the next version because as long as you follow the one core rule which is do not modify core and make a plugin instead.then your upgrade time will be very quick.",link:"/blog/posts/2023-11-3"},{title:"Permission System",content:"  frontmatter.title  written on march 12 2023in v4 the permission system was based on numerical values that were used as bitwise operators.this meant that the amount of permissions was based on an ever increasing set of numbers.heres how that looked before.ts    none  0    admin  2    moderator  4    vip_bronze  8    vip_silver  16    vip_gold  32now when you wanted someone to be an admin but also a vip_gold supporter you would add the two values together and that would be their permission.that would be reflected in the database as the numerical value 34. why i changed itwhen you go to read the database you have no understanding of what they actually have as far as permissions go without having context of the core programming of the framework.i moved away from bitwise functions entirely for the v5 permission structure to make it more human readable.so instead of doing numerical representations of numbers we are now doing an array of strings. which one do you think is more human readablev4 vip_gold  admin permission is 34v5 vip_gold  admin permission is admin vip_gold character  account permissionson top of this i also introduced this new permission structure for both individual accounts and characters.this allows for specific permissions to exist for a whole account and specific permissions to be introduced for a single character.this means if we have a character permission called police and an interaction point requires the permission of police to be present then we can add that to a characater.then we can restrict any functionality that we build with this new permission system.it is just the better option for the long haul.",link:"/blog/posts/2023-12-3"},{title:"Prototyping the Player",content:"  frontmatter.title  written on march 13 2023let me preface by saying do not do prototyping the limitations far outweigh the benefits.prototyping the default altv player class has its benefits but it also has downsides as well.if you are unaware of what prototyping is it allows you to extend the player interface to allow for custom properties functions etc. to be found to the player instance itself.heres an example of how to prototype but also how it could be used.tsdeclare module altserver     export interface player         test string    tsalt.onplayerconnect player alt.player      player.test  hello worldat first glance this is really interesting but also really convenient behavior you can bind data to a player. what are the downsidesyou might be thinking thats amazing i wish i knew this earlier.thats great but let me explain why it is horrible behavior that limits your gamemode drastically.lets say for example you want to create a way to listen to the changes of that specific property.well you would have one option and its not great.tsconst lastvalues  id string string   alt.setinterval      alt.player.all.foreachplayer          if lastvaluesplayer.id  player.test              its the same value do not do anything            return                 its not the same value invoke the listen event        lastvaluesplayer.id  player.test        invokelistencallbackplayer     100why is this bad you may be asking you have just created an interval for a single property that constantly loops through all changes to do a compare  contrast of their current properties and their previous properties. this is not only performance intensive but also just genuinely awful code.you will have to do this for almost every single property you introduce. what is the alternativethe alternative is simply not using a prototype at all and either going with a class or a what we did in athena which was a get  set cache system that fires off events for specific property keys when they are set on a player. what do i mean by thisin v5 i created a system that internally caches the data that belongs to a given authenticated player. this data is stored in memory until their session has ended.data is stored in a single variable that uses the player.id and has an object such as  example   assigned to it.now when i want to set a single variable we use a function to set a key to a specific value.tsathena.document.character.set example arraystring player example hello worldinternally the set function here applies the value to the specific key and also updates the database by pushing out the changes after setting the cache first.this is important to keep the server fluid without waiting for database calls.now what is important here is that i said you can listen to property key changes.with another function we can build functionality around changes that occur to the players data by listening to those changes.tsathena.document.player.onchange example arraystring example player newvalue oldvalue       do something with this changed data     newvalue  hello world     oldvalue  undefinedwhat we are doing here is pretty much a fire and forget pattern where we do not care if a function responds. the function is there to provide a specific purpose and that is up to the individual developer to do something with those changes.this is also way more performance efficient since we are not running a constant interval that is comparing properties. instead it just pushes out that data and if there are callbacks setup to listen for that property key they will get their invoke.",link:"/blog/posts/2023-13-3"},{title:"Landing",content:"div classvideocontainer  div classvideo    iframe width650 height372 srchttpswww.youtube.comembedk4d51bjkz0 titleyoutube video player frameborder0 allowaccelerometer autoplay clipboardwrite encryptedmedia gyroscope pictureinpicture allowfullscreen   divdivstyle.imagecontainer img   maxwidth 200px  maxheight 200px.video   display flex  flexdirection column  justifycontent center  aligncenter center  alignitems center  boxsizing borderbox  minwidth 650px  maxwidth 650px.video iframe   borderradius 12px  border 12px solid rgba0 0 0 0.3.videocontainer   display flex  width 100  paddingtop 64px  justifycontent center  alignitems center  paddingleft 64px  paddingright 64pxstyle",link:"/index"},{title:"How do I contribute to a repository?",content:"  frontmatter.title hello there here is a guide for the beginners who want to contributeif you want to learn more about contribution read further. contribution guidelinesto contribute to athena first of all please have a look at contribution guidelines which can be found hereathena framework  contribution guidelineshttpsgithub.comstuykaltvathenablobmastercontributing.md contribution philosophycontributing to the athena framework follows a very specific philosophy.when you want to contribute new features code or introduce something new to the core of the athena framework you need to consider the following. is the feature that has been written something that all developers who are using athena can utilizehere are a few examples of what could ben written instead of writing a feature directly. you wrote a new skill into athena that lets you level your strength.     instead you can write a skill system that lets you build custom skills that other developers can tap into to build plugins based on your skill system.br  you wrote an lspd faction     instead you write a faction system that is utilized by all factions and then developers can build their own factions with similar features.br  you wrote a job specifically to revive civilians     instead you should write a job system that lets others build jobs easily that are designated for player interactions.what makes athena easy to use is that we introduce features that let you build out more complex systems quickly without having to figure out the hidden complexities of that system.we want developers building on top of athena to have very fast turn around times for new features. about contributingso the idea behind contribution is basically that you have a feature branch in your own private repository of athena.youll need to test features you want to pull first locally also you will need to bring the changes to your own custom repository first.this is usually done through the usage of git.you will find examples in here of how its done through the terminal in visual studio code powershell or gitbash. fork a repositoryto fork a repository youll need to go to the url of the repository you want to fork. afterwards you can press the fork button in the upper right.heres an example of how it will look likeimagehttpsi.imgur.comazuyokd.png switch branchessince athena is always based on the latest devbranch you should have an idea of how to switch branches.basically branches can be switched by tsgit checkout branchname  basic examplegit checkout 3.9.0  more real examplethis requires you to have an fetched upstream with available branches. create feature branchi would highly suggest that you learn to use feature branches for public contribution. here is an example of how it is done.a new branch is always inherited from the current branch you are working on. so if you are using the master branch your feature branch will also inherit from the master branch.tsgit checkout b branchname  basic examplegit checkout b hacktober  more real example  will immediately checkout to new branch called hacktober stage files for commithow do i add a file to the gitcommit stage firsttsgit add pathfilename  basic examplegit add foldernameanotherfolderfilename.ts  more real example hereyou can also add all current changes to the git commitstage by simply typing tsgit add  comment staged filesto comment your current staged commits you will simply have to type tsgit commit m string  basic examplegit commit m hello there i am a commit message  more real exampleinto your favourite console. push to custom repositoryif you have staged your commits you can now push them to your own custom repository by tsgit push originthis will create the feature branch in your private repository start a pull requestif everything is correct you will now see the new branch in your private repository and you can start a pull request from your own repository.imagehttpsi.imgur.comyrxhrjj.pngyou need to switch to your newly created feature branch go to the pull request section and press new pull request imagehttpsi.imgur.com2qwhsya.pngyou will see a window where you can change the base branch and your own custom branch.imagehttpsi.imgur.com1x69ddf.png",link:"/intro/how-do-i/contribute"},{title:"How do i keep my repository updated?",content:"  frontmatter.title actually to pull the latest changes your repository youll need to have stuyks upstream athena as a remote in your repository.the process of setting git remotes is explained in the installation section of the documentation.to pull the latest changes to your current branch youd have to writetsgit pull upstream branchnamean valid example would look like thistsgit pull upstream mastergit pull upstream 3.9.0 you can also fetch all current remote branches by just typingtsgit fetch upstream allbut you also need to be aware of the merge markers. if youre using visual studio code it will show you the merge markers.there you have an choice to accept incoming changes or your own changes instead of the incoming changes.",link:"/intro/how-do-i/keep-my-repo-updated"},{title:"FAQ",content:"  frontmatter.title  disabling the default loginthats great but thats the only login interface that currently exists for athena. if you wish to disable the default login then you need to write your own login plugin that will replace the discord one entirely. replacing mongodb with sqlit can be done but replacing mongodb with sql will require a lot of work and its really unnecessary. its better to just learn the functions that come with athena and using the database then spending several months replacing code that is in the core.not recommended do i need a server hostno. you do not need a server host. it is recommended to start off on your own computer and developing your gamemode further before publishing it on to a server host. after performing these steps then you may move on to finding a server host..introbestserverforyou.md.",link:"/intro/info/faq"},{title:"Folder Structure",content:"  frontmatter.title  what is this structureit is no mystery that the athena framework is huge. there are well over 400 files and tons of folders to look through. this framework can be intimidating but there is a method to the madness if youve never seen a project of this size before.this page will teach you how the author organized the project structure. single resourceunlike in fivem or other platforms the athena framework runs out of a single resource using the altv client. which means that there is no resource restarting. instead its a full server restart.you may think but thats really slow isnt it thats what i originally thought when i started writing this project but by using the most bleeding edge technologies weve made the athena framework one of the fastest frameworks that will exist in the gtav space.while running in development mode which has been purely created for development you can literally reboot the entire server in less than 20 seconds.running development mode for the athena frameworkhttpsthumbs.gfycat.comthunderousflusteredbinturongsize_restricted.gif where to modify codeeverything that you may want to modify for your server is inside of the src folder. everything in this folder contains everything you will ever likely want to modify to customize athena.athena framework folder in vscodehttpsi.imgur.compjhquy2.png server structure explainedif you are planning on modifying these folders they are highly likely to be modified in the future. if you want to expand upon the framework consider using plugins.  apithis folder contains the core api. its mostly only useful for adding new functions to the athena api in groups.  athenathere is a configuration file inside of here for customizing some of the core game modes features. its currently being phased out but some configuration data is still present. decoratorsall existing typescript based decorates for the framework. effectsthese are the default item effects that come with the athena framework. there isnt very many in here but enough information to build your own item effects.  eventsthese are mostly event structures to help make athena tick. they should remain mostly untouched as there isnt much to customize here.  extensionsthis is where player functionality currently lives. they can usually be accessed through athena.player.x or athena.vehicle.x inside of vscode when writing functions.extensions can usually be modified with an override function to change the behavior and logic. which is accessible through the plugin structure as well.  importsthis is where all core game mode imports are done. these usually consist of many different imports with a load order to ensure the game mode runs correctly. you may append any additional core import files here. however it is highly recommended to use the plugin structure instead for modifying  adding new features to the framework.creatingplugins.md....pluginscreatingplugins.md  interfacethese are serverside specific interfaces which help define different type structures in the framework. you can find account structure category information configs etc. in here. usually you dont want to directly modify these but instead extend them. you can find examples of extensions of common interfaces inside of some of the plugins in the srccoreplugins folder.  streamersthese help synchronize server and client specific information using a custom node based streamer that runs alongside the athena framework. the streamer basically takes in player information determines the closest set of data around that player then feeds it to the players clientside.in most cases all major streamers are covered such as objects markers static pedestrians text labels etc.these can be accessed under athena.controllers.x  systemsthis is a huge portion of the logic for the framework. this is where a lot of core functionality can be found. everything from sound systems character systems blip systems chat systems storage systems can all be found here.this also contains injections which can be accessed through athena.injections. injections will let you override or modify existing features without touching the core too much.the catch is that the functionality in most of this section is abstracted to be used or called from other interfaces such as webviews  views.  utilitygeneral utility functions to make the game mode tick. try athena.utility.  viewsgeneral view functionality for builtin things like inventory storage and login discord.",link:"/intro/info/folder-structure"},{title:"Troubleshooting",content:"  frontmatter.title while not everything can be magically fixed when working with athena there are some steps you can take to help identify your problem. the fix commandtheres a command that comes with athena that can only be ran with npm install has been ran successfully once.after having ran that command once you can run the following in a terminal.npm run fixafter running this command run the followingnpm installnpm run updateif youre lucky everything will go back to normal. if not you may need to seek out additional help in discord. black screen no webviewthis means that theres a vue plugin which has an error in it. this is mostly due to adding plugins that may be broken.this can be resolved by doing the following1. look at each plugin your srccoreplugins folder.2. determine which plugins were added or modified.3. disable or remove a custom plugin.4. start the server. check if it resolves it.5. if it did not resolve it go to step 2 again.if successful youll determine which plugin is causing issues in your installation.",link:"/intro/info/troubleshooting"},{title:"Using VSCode",content:"  frontmatter.title  opening a folderthe biggest improvement you can make is opening the entire project folder into vscode. this will allow you to easily weave through folders files etc. and pretty much use vscode as an entire workspace for development.how do you do it1. open vscode2. go to file3. click on open folder4. navigate to your privately cloned athena framework folder5. openwant to know if you did it right your athena folder should look like thisa workspace folder of athena in vscodehttpsi.imgur.comc65e1lz.png pushing changesif you modify code you can use vscode to push your changes to your private repository. this will only work if you follow the full installation tutorial with a private fork.you can stage changes by click the  sign. visual guidefollow the image below.httpsi.imgur.comcnf74ix.pngonce changes are staged you can write about it and push it up to your private repository by hitting the checkmark or type the command.httpsi.imgur.comrjzvmx1.png cli commandyou write these into a terminal.git add .srcsomefileorfoldergit commit m i changed some stuff  git push origin master",link:"/intro/info/using-vscode"},{title:"Installing on Linux",content:"  frontmatter.title  linuxlinux installation should be using ubuntu 20.04 or greater. the author of this documentation has used ubuntu 20.04 without any issues. tipthese cannot be used in your folder pathing. do not use them. warningas a general recommendation you should only be using linux for production. it is highly recommended to develop on athena in a windows environment as the build times are much faster. dependenciesinstall or perform all actions in this section. copy the entire code block and paste it. gitgrab the latest version of git.sudo apt update  sudo apt install git curlgrab the latest version of curl.sudo apt update  sudo apt install curl wgetgrab the latest version of wget.sudo apt update  sudo apt install wget ufwgrab the latest verson of ufw uncomplicated firewallsudo aptget install ufw nodejs 16 through nvmgrab at least version 17 for nodejs through nvm. uninstall older versionsthis step only applies if you installed nvm in the past.nvm uninstall old_version_here install latest version of nvminstall the nvm script for selecting nodejs versions.curl o httpsraw.githubusercontent.comcreationixnvmv0.33.0install.sh  bash      export nvm_dirhome.nvm       s nvm_dirnvm.sh   . nvm_dirnvm.sh       s nvm_dirbash_completion   . nvm_dirbash_completionnvm install 17nvm use 17 mongodbkeep in mind this is optional if you use mongodb atlas for your database. if you are using a local database please install mongodb server here.curl fssl httpswww.mongodb.orgstaticpgpserver4.4.asc  sudo aptkey add echo deb  archamd64arm64  httpsrepo.mongodb.orgaptubuntu bionicmongodborg4.4 multiverse  sudo tee etcaptsources.list.dmongodborg4.4.listsudo apt updatesudo apt install mongodborgsudo systemctl start mongod.servicesudo systemctl status mongodinstructions pulled from herehttpsdocs.mongodb.commanualtutorialinstallmongodbonubuntu. libatomic1grab the libatomic1 library.sudo aptget update  sudo aptget install libatomic1 create a github accountyes you are going to need a github account. you are also going to need to setup an ssh key for your github account. it is covered below.sign up with githubhttpsgithub.comsignup setup ssh keygithub has really good ssh setup instructionshttpsdocs.github.comenauthenticationconnectingtogithubwithssh but they may not be entirely clear for newer developers. if you are comfortable with normal documentation give the above link a try. make sure to select the linux tab. open a terminalgit bash is something that should come with git by default. enter git bash in your windows search to open it.generate a new ssh keyenter the following in a terminal.sshkeygen t ed25519 c your_emailexample.comwhen youre prompted to enter a file in which to save the key press enter. this accepts the default file location.it may ask you for a password.x20hitting enter twice will automatically default to no password.start the ssh agententer the following in a terminal.eval sshagent s_it should respond with agent pid xyz_add the ssh key to the ssh agententer the following in a terminalsshadd .sshid_ed25519add the ssh key to githubenter the following in a terminalcat .sshid_ed25519.pubcopy the text printed from sshed25519 all the way to your email.25519.pub key copy examplehttpsi.imgur.comnpjcwhw.pngnavigate to your github settings and the ssh and gpg keys section.click on new ssh keyclick new ssh key to add it to your github.httpsi.imgur.comvycobd5.pnggive the key a name and paste the public key into the larger text box. port forwardingat the very least you will need to open port 7788 for your main server.you may need to forward ports in your server panel router etc. if you are running athena on a server it is likely you will need to add 7788 to an additional firewall somewhere in your server providers panel. ufw instructionsbe very careful about doing this because you need to ensure port 22 is setup for ufw.were going to do each of these commands one at a time.sudo ufw allow 22sudo ufw allow sshsudo ufw allow 7788sudo ufw enable_you can verify that ports have been opened successfully after you setup the rest of athena._ setup private repocreate a new repository on github.visit github and ensure you are signed in.httpsi.imgur.com6wscjfu.pnguse the following settings and hit create.httpsi.imgur.comcfzm096.pnghttpsi.imgur.comnlsggom.pngleave the page open and do not touch anything. you need to do some other things first. clone into private repositoryopen a terminal.enter the following commands in order.git clone httpsgithub.comstuykaltvathenacd altvathenaonce inside of the repository you need to setup a new remote url. copy the url from the page you left open and paste it where url_for_other_repo_here is in the command below.httpsi.imgur.comsmi37h9.pngafter running this command do the following commandsgit remote seturl push origin url_for_other_repo_heregit add git commit m initgit push origingit remote add upstream httpsgithub.comstuykaltvathenagit remote seturl push upstream disableinstead of disabling the push upstream you can also set this to your origin repository.an example of how to change the remote push url is heretsgit remote seturl push origin your_repository_urlif you refresh the github page you should see a clone of athena inside of your private repository if you were successful. pushing updateswhen you make changes to the code base you can push it by doinggit add .git commit m whatever you changedgit push origin master installing dependenciesthis installs all nodejs packages and dependencies that help run the server.npm install installing server filesfrom this point forward you can simply run this npm command to update dependencies.npm run update starting the serverhey listen normally you start the server through altvserver.exe but we do not do that with athena. there are other programs that run alongside athena that allow it to function. you will need to run one of the commands below. update the server.cfgdo not modify the server.cfg yes you are reading this correctly.instead you should do the following.open 1 of the 3 configurations in the configs folder.you should see any of the following configurations dev.json devtest.json prod.jsonedit all of these but remember this very important rule.do not change host because 0.0.0.0 is correct. production modethis is the mode you should use when you are having users connect.enter the following in a terminalnpm run linux_linux only supports production mode as you should be doing most of your development on windows based computers._ checking portscheck if the ports are currently open while the server is running. check port 7788.check ports with yougetsignalhttpswww.yougetsignal.comtoolsopenports connectingremember to get the httpsaltv.mphttpsaltv.mp client and connect. what ip to useif you are running this on your local machine you should connect to 127.0.0.17788.if you are running this on an external server you should connect to the servers ip address. successful installationa successful installation and bootup will look like the followinghttpsi.imgur.comnuppqyc.png",link:"/intro/install/installing-on-linux"},{title:"Installing on Windows",content:"  frontmatter.title  install on windows 10installing on windows is very straight forward but you will need to do a handful of things to ensure your environment is setup correctly. there is a lot to cover when installing athena but these instructions cover nearly everything you need to do in a windows environment to get athena running.read them carefully read them twice and double check your steps. tipthese cannot be used in your folder pathing. do not use them. dependenciesyou will need to install setup or create accounts for all of the links that are in this section.   download and install githttpsgitscm.comdownloads     used to pull down and push up code changes to your repositories.   download and install nodejs 18httpsnodejs.orgendownloadcurrent     a runtime that runs javascript code.   download and install mongodb community serverhttpswww.mongodb.comtrydownloadcommunity     a nosql database that is fast and easy.   download and install vscodehttpscode.visualstudio.comdownload     an integrated development environment for writing code and getting suggestions as you write code.   create a github accounthttpsgithub.com     github will let you privately store a modified version of the athena codebase. download windows terminalhttpsapps.microsoft.comstoredetailwindowsterminal9n0dx20hk701hlenusglus   great for inputting commands like the ones you will see in this tutorial. highly recommended to install and pin it to your desktop somewhere. setup ssh keygithub has really good ssh setup instructionshttpsdocs.github.comenauthenticationconnectingtogithubwithssh but they may not be entirely clear for newer developers. if you are comfortable with normal documentation give the above link a try. make sure to select the windows tab. open git bashgit bash is something that should come with git by default. enter git bash in your windows search to open it.git bash in windows searchhttpsi.imgur.comt9kx1el.pnggenerate a new ssh keyenter the following in a git bashsshkeygen t ed25519 c your_emailexample.comwhen youre prompted to enter a file in which to save the key press enter. this accepts the default file location.it may ask you for a password.hitting enter twice will automatically default to no password.start the ssh agententer the following in git bash.eval sshagent s_it should respond with agent pid xyz_add the ssh key to the ssh agententer the following in git bashsshadd .sshid_ed25519add the ssh key to githubenter the following in a git bashcat .sshid_ed25519.pubcopy the text printed from sshed25519 all the way to your email.25519.pub key copy examplehttpsi.imgur.comnpjcwhw.pngnavigate to your github settings and the ssh and gpg keys section.click on new ssh keyclick new ssh key to add it to your github.httpsi.imgur.comvycobd5.pnggive the key a name and paste the public key into the larger text box. ensure mongodb running as a servicemongodb does not have to be installed locally but if it is this is an important step. open your task manager and ensure that you see mongodb running as a service.you can check that mongodb is running as a service by going into task manager  serviceshttpsi.imgur.commj9fpxx.png port forwardingport forwarding is not required for local development. if you need other players to join and test you must open port 7788. if you are putting the server in production mode you must open 7788.heres a .bat script that will open both ports in your windows firewall.echo offecho opening 7788 for tcpnetsh advfirewall firewall add rule namealtv7788intcp dirin actionallow protocoltcp localport7788netsh advfirewall firewall add rule namealtv7788outtcp dirout actionallow protocoltcp localport7788echo opening 7788 for udpnetsh advfirewall firewall add rule namealtv7788inudp dirin actionallow protocoludp localport7788netsh advfirewall firewall add rule namealtv7788outudp dirout actionallow protocoludp localport7788pauseif you need additional help with port forwarding in your router you should check out this port forward websitehttpsportforward.comrouter.htm where you can find instructions for your router based on brand._you can verify that ports have been opened successfully after you setup the rest of athena._ setup private repocreate a new repository on github.visit github and ensure you are signed in.httpsi.imgur.com6wscjfu.pnguse the following settings and hit create.httpsi.imgur.comcfzm096.pnghttpsi.imgur.comnlsggom.pngleave the page open and do not touch anything. you need to do some other things first. clone into private repositoryopen a windows terminal such as command line or powershell. the author personally recommends windows terminalhttpswww.microsoft.comenuspwindowsterminal9n0dx20hk701activetabpivotoverviewtab from the microsoft store.enter the following commands in order.git clone httpsgithub.comstuykaltvathenacd altvathenaonce inside of the repository you need to setup a new remote url. copy the url from the page you left open and paste it where url_for_other_repo_here is in the command below.httpsi.imgur.comsmi37h9.pngafter running this command do the following commandsgit remote seturl push origin url_for_other_repo_heregit add git commit m initgit push origingit remote add upstream httpsgithub.comstuykaltvathenagit remote seturl push upstream disableinstead of disabling the push upstream you can also set this to your origin repository.an example of how to change the remote push url is heretsgit remote seturl push origin your_repository_urlif you refresh the github page you should see a clone of athena inside of your private repository if you were successful. pushing updateswhen you make changes to the code base you can push it by doinggit add .git commit m whatever you changedgit push origin master installing dependenciesthis installs all nodejs packages and dependencies that help run the server.npm install installing server filesfrom this point forward you can simply run this npm command to update dependencies.npm run update starting the serverhey listen normally you start the server through altvserver.exe but we do not do that with athena. there are other programs that run alongside athena that allow it to function. you will need to run one of the commands below. update the server.cfgdo not modify the server.cfg yes you are reading this correctly.instead you should do the following.open 1 of the 3 configurations in the configs folder.you should see any of the following configurations dev.json devtest.json prod.jsonedit all of these but remember this very important rule.do not change host because 0.0.0.0 is correct. production modethis is the mode you should use when you are having users connect.enter the following in a terminalnpm run windows development test modethis is the mode you should use when you are having a limited set of users connect with debug mode on.enter the following in a terminalnpm run devtest development modethis is the mode you should use when you want to work on making changes. limited to 1 user joining at a time. this should be used for all your major development. this is the fastest way to develop your game mode and requires the least amount of compile time to test things.enter the following in a terminalnpm run dev checking portscheck if the ports are currently open while the server is running. check port 7788.check ports with yougetsignalhttpswww.yougetsignal.comtoolsopenports connectingremember to get the httpsaltv.mphttpsaltv.mp client and connect. what ip to useif you are running this on your local machine you should connect to 127.0.0.17788 or 0.0.0.07788 if it does not work.if you are running this on an external server you should connect to the servers ip address. successful installationa successful installation and bootup will look like the following...httpsi.imgur.comnuppqyc.png",link:"/intro/install/installing-on-windows"},{title:"Staying up to date",content:"  frontmatter.title  why updatewell in most cases athena is constantly moving forward with security patches algorithm improvements and new features. there is often a dedicated development branch that stuyk and the community are constantly pushing changes into.if you do not update you run the risk of your game mode becoming outofdate and unmanageable in the foreseeable future.x20want evidence of this as the author of athena ive witnessed my old game mode become completely unplayable after 6 months time of not updating. too many features have become outofdate and api changes have made it near impossible to update.so... what does the author recommend stay uptodate or risk the game mode breaking. learn these tools you will not regret it. how do i updatewhen you cloned your private fork of the athena framework you should have ran this in a terminalgit remote add upstream httpsgithub.comstuykaltvathenagit remote seturl push upstream disableinstead of disabling the push upstream you can also set this to your origin repository.an example of how to change the remote push url is heretsgit remote seturl push origin your_repository_urlafter running this in a terminal you are now hooked up to the main repository to pull updates from.you will first need to commit any changes that you have made on your private fork.git add .git commit m i made some changes this is what i did heregit push origin master_if you run into errors will doing the above google it. seriously._ fetching upstreampulling from upstream means that you are going to take the changes from the main athena repository and smash them into your current repository. merging from mastergit fetch upstreamgit pull upstream master merging from a development branchgit fetch upstreamgit pull upstream branch_version_goes_here now i have merge conflictsyes you should normally have merge conflicts. this is the part where you absolutely must learn the tools that you are using. merge conflicts means there is a difference between your current repository and the other repository which you pulled code from.this means you will be fixing merge conflicts by using vscode to help identify and fix them. you will need to figure out where all the merge conflicts are and resolve them based on what you need.tldr  watch this video below on how to manage merge conflicts.iframe width560 height315 srchttpswww.youtube.comembedqmkdodjujs titleyoutube video player frameborder0 allowaccelerometer autoplay clipboardwrite encryptedmedia gyroscope pictureinpicture allowfullscreeniframe after resolving merge conflictsyou should make a new commit and push the changes up to your private repository.thats it.",link:"/intro/install/staying-up-to-date"},{title:"Best Server for You",content:"  frontmatter.title there is no best server option if you cannot do basic system administration. you also do not need a server host for development. warningavoid hosts that do not give you full control of your server. server hosts like zap. server deployment and infrastructurewhen you are working with the athena framework you will be creating a private fork. a private fork is a copy of the athena repository that contains your changes. it will only contain your changes if you know how utilize git. which is a tool used for pushing changes to repositories.as ive stated dozens of times. if you are not familiar with these tools you will have a hard time working with them. athena framework will move forward without you and if you do not learn to use these tools your server will struggle with security updates. do i need to buy a serverin most cases no. you do not need to buy a server. your local machine will work just fine until you decide you want to add more users to your server.x20when you are launching for a full community you should look into these items a cdn to host your server resource downloads such as mods. a dedicated server with unmetered up  down at least 4 cores. at least 8 gb of ram. at least 256gb of storage a dedicated cpu ddos protection ability to access a server with full cli access. unmanaged.want a recommendation its not any of the server providers that charge you perslot for hosting. developing with athenayou should be using the athena framework in a local windows environment for development. if you are knowledgeable you can figure out other ways to go about this but the current toolsets and fastest way to develop with athena has to be done in a windows environment.tldr  push changes to your repository on a windows platform with git. deploying a server with athenawhen you have committed changes to your private repository. you should pull that private repository into any vps or dedicated server that can support mongodb. it can be a windows server or a linux server. if you are not familiar with a cli put it on a windows machine and pull it into your windows server.tldr  pull changes into your dedicated server  vps with git.",link:"/intro/intro/best-server-for-you"},{title:"Getting Started",content:"  frontmatter.title  full installationit is recommended to do a full install but quick instructions are provided below.installing on windows..installinstallingonwindows.mdinstalling on linux..installinstallingonlinux.md fast installationif you wish to use athena but not make any changes to the core unlikely you wont make changes here are some simple instructions for the every day developer who just wants to test this with the altv client quickly. windows install mongodb serverhttpswww.mongodb.comtrydownloadcommunity install githttpsgitscm.comdownloads nodejs 17httpsnodejs.orgendownload altv clienthttpsaltv.mp commandsquick start for getting athena running. make sure to install the above programs before doing anything below.run all of these in command prompt powershell cli etc.git clone httpsgithub.comstuykaltvathenacd altvathenanpm installnpm run updatetsnpm run windows launch the altv client join with0.0.0.07788 in direct connect   if the above does not work try 127.0.0.17788 thats it.",link:"/intro/intro/index"},{title:"About Mods",content:"  frontmatter.title  what is not a modlet me preface with the following statements. a bunch of .js and .ts files are not a mod. a resource from the _altv hub_ is not a mod. a plugin from the athena discord is not a mod. what is a mod custom vehicles custom mlos interiors custom clothing custom hairstyles warning a warning for mod userskeep in mind that when you are adding dozens of vehicles ensure you are checking that they are meant for multiplayer servers. a lot of vehicles have too many polygons. which basically means if you put too many vehicles that are too high quality you will absolutely lag your users. warning a warning about mod sizenot everyone has unlimited bandwidth and you should keep that in mind before distributing them to your userbase. its really important that you keep your load times low. it can get quite boring for an end user when have to download huge resource packs.",link:"/intro/mods/about-mods"},{title:"Adding Modded Clothes",content:"  frontmatter.title clothing mods are probably the most annoying modding resouce to add to a server purely because of the complexity.it is suggested to follow the following the official clothing tutorial for setting up a clothing dlc packhttpsdocs.altv.mpgtaarticlestutorialsstream_clothes.html. where to load clothesbelow is an example of a single clothing mod with exactly 1 for the mask slot.every dlc pack for clothing may be different but there are some general common functionalities.all mods should be placed under resourcesmods. altvathena    l  resources        l  mods              clothingmoda                 stream.cfg                 resource.cfg                l  stream                     mp_f_freemode_01_mp_f_dlcpackname.meta                     mp_m_freemode_01_mp_m_dlcpackname.meta                                          ped_female.rpf                        mp_f_freemode_01_mp_f_dlcpackname.ymt                       l  mp_f_freemode_01_mp_f_dlcpackname                            some_model_000_u.ydd                           l some_model_diff_000_a_uni.ytd                                        l  ped_male.rpf                         mp_m_freemode_01_mp_m_dlcpackname.ymt                        l  mp_m_freemode_01_mp_m_dlcpackname                             some_model_000_u.ydd                            l some_model_diff_000_a_un                        l  clothingmodc adding to configsafter adding the modification to your resourcesmods folder you need to add it to your configs.under the configs folder in the root directory of athena you will have various .json files.it is suggested to load all resource packs at the beginning of the resources array.very important notethe order of the resources does matter. do not alphabetize. do not change the order.you should absolutely load clothing resources as they are added to your game mode.order matters. example configthis is what you would add under configsdev.json file to load a clothing resource.the name should match the folder name in resourcesmods.javascriptresources     modsclothingmodc    modsclothingmoda    modsclothingmodw    webviews    core configuring clothing countsyou should be aware of the clothing count you are adding for both male and female. you are 100 responsible to know this information and it should be obtainable from the clothing tool provided in the tutorial at the beginning of this page.example of clothing countshttpsi.imgur.comwji178b.pngas you can see in the above image we need to add the following1  female top  shirt1  male undershirtinside of athena navigate tosrccorepluginscoreclothingsharedconfig.tslook for a section called dlc_clothing.this section has a very specific format so pay attention.were going to add the clothing count based on the example above. 1 female top and 1 male undershirt.typescript    dlc_clothing         clothing_ids.masks         clothing_ids.torsos         clothing_ids.legs         clothing_ids.bags         clothing_ids.shoes         clothing_ids.accessories         clothing_ids.undershirts              mod name clothingmoda                             dlcname dlcpackname                count                     orientation.female 0                    orientation.male 1                                            clothing_ids.body_armour         clothing_ids.top              mod name clothingmoda                             dlcname dlcpackname                count                     orientation.female 1                    orientation.male 0                                         finishyou are all done adding the clothing mod.visit a clothing store ingame to see if it worked.keep in mind that if you remove this mod in the future you will have to remove the clothing item from all players.which there is not an automated method to do this.",link:"/intro/mods/adding-clothes"},{title:"Adding Mods",content:"  frontmatter.title  using mods with altvaltv has general modding instructions on how to stream files mlos ymaps etchttpsdocs.altv.mpgtaarticlestutorialsindex.html.after following those general instructions read further below on where to put your mods. where to load mods altvathena    l  resources        l  mods              amod                 stream.cfg                 resource.cfg                l  stream              somemod                 stream.cfg                 resource.cfg                l  stream            l  whatevermod                 stream.cfg                 resource.cfg                l  stream add to server.cfg wait do not edit server.cfg navigate to one of the following files configprod.json configdevtest.json configdev.jsonadd the name of your resource and the folder path to the resources section.example modsteslacar modshospital modsfastcar load orderin your configurations you should always be loading mods first. which means you should append mods before normal athena resources such as core and webview.ensure you edit configurations in the configs folder.exampletsresources     modsamod     modssomemod     modswhatevermod     webviews     core_it is highly recommended that if you are actively developing that you leave major mlos off as it increases load time._ where to place modsmods are a bit tricky with altv but the altv discord should always be your 1 place to ask for modding support and ask general questions.all mods should be placed inside .resourcesmods. anything outside this folder gets deletedthis is necessary to ensure a clean build is created for each deployment. examplefolder path.resourcesmodshospitalresource namemodshospital",link:"/intro/mods/adding-mods"},{title:"Adding Modded Vehicles",content:"  frontmatter.title  how to add vehiclesfirst you should check out the official article that altv created on streaming vehicleshttpsdocs.altv.mpgtaarticlestutorialsstream_vehicles.html. after getting your first vehicle resource setup it needs to be placed in the correct folder.the folder where you should place vehicle mods is resourcesmods athena specific setup warning you will have to modify a file in athenas core to include your modified vehicle.append the vehicles information to the following filesrccoresharedinformationvehicles.tsadd the following information for your vehicle. display name model type class sell can it be sold price how much it costs storage how many storage slots does it have",link:"/intro/mods/adding-vehicles"},{content:" vue which dist file to use from cdn or without a bundler vue.runtime.global.prod.js   for direct use via script src... in the browser. exposes the vue global.   note that global builds are not umdhttpsgithub.comumdjsumd builds.  they are built as iifeshttpsdeveloper.mozilla.orgenusdocsglossaryiife and is only meant for direct use via script src....   inbrowser template compilation     vue.global.js is the full build that includes both the compiler and the runtime so it supports compiling templates on the fly.     vue.runtime.global.js contains only the runtime and requires templates to be precompiled during a build step.   inlines all vue core internal packages  i.e. its a single file with no dependencies on other files. this means you must import everything from this file and this file only to ensure you are getting the same instance of code.   contains hardcoded proddev branches and the prod build is preminified. use the .prod.js files for production. vue.runtime.esmbrowser.prod.js   for usage via native es modules imports in browser via script typemodule.   shares the same runtime compilation dependency inlining and hardcoded proddev behavior with the global build. with a bundler vue.runtime.esmbundler.js   for use with bundlers like webpack rollup and parcel.   leaves proddev branches with process.env.node_env guards must be replaced by bundler   does not ship minified builds to be done together with the rest of the code after bundling   imports dependencies e.g. vueruntimecore vueruntimecompiler     imported dependencies are also esmbundler builds and will in turn import their dependencies e.g. vueruntimecore imports vuereactivity     this means you can installimport these deps individually without ending up with different instances of these dependencies but you must make sure they all resolve to the same version.   inbrowser template compilation     vue.runtime.esmbundler.js default is runtime only and requires all templates to be precompiled. this is the default entry for bundlers via module field in package.json because when using a bundler templates are typically precompiled e.g. in .vue files.     vue.esmbundler.js includes the runtime compiler. use this if you are using a bundler but still want runtime template compilation e.g. indom templates or templates via inline javascript strings. you will need to configure your bundler to alias vue to this file. bundler build feature flagsstarting with 3.0.0rc.3 esmbundler builds now exposes global feature flags that can be overwritten at compile time __vue_options_api__ enabledisable options api support default true __vue_prod_devtools__ enabledisable devtools support in production default falsethe build will work without configuring these flags however it is strongly recommended to properly configure them in order to get proper treeshaking in the final bundle. to configure these flags webpack use definepluginhttpswebpack.js.orgpluginsdefineplugin rollup use rolluppluginreplacehttpsgithub.comrolluppluginstreemasterpackagesreplace vite configured by default but can be overwritten using the define optionhttpsgithub.comvitejsvitebloba4133c073e640b17276b2de6e91a6857bdf382e1srcnodeconfig.tsl72l76note the replacement value must be boolean literals and cannot be strings otherwise the bundlerminifier will not be able to properly evaluate the conditions. for serverside rendering vue.cjs.prod.js   for use in node.js serverside rendering via require.   if you bundle your app with webpack with target node and properly externalize vue this is the build that will be loaded.   the devprod files are prebuilt but the appropriate file is automatically required based on process.env.node_env.",link:"/node_modules/vue/README"},{title:"About Plugins",content:"  frontmatter.title  what is not a pluginlet me preface with the following statements. a mod is not a plugin a resource from the _altv hub_ is not a plugin. a mlo is not a plugin. a clothing item is not a plugin. what is a plugina repository with code that you can drag  drop.a plugin is 100 compatible with the plugin folder structure.all plugins go into srccoreplugins",link:"/plugins/about-plugins"},{title:"Creating Plugins",content:"  frontmatter.title plugins in the athena framework are made in a specific way. meaning that following this general structure will help you create robust plugins without touching the core of the framework.it is important that when a plugin is created that is does not adjust the core of the athena framework. this ensures that compatibility is futureproof and additional updates to the plugin can be made without over complicating it. visual learner heres a templatethere is a template that exists as a general starting point to copy  paste into your server infrastructure to begin building a plugin. you can check that out herehttpsgithub.comstuykaltvathenaplugintemplatehttpsgithub.comstuykaltvathenaplugintemplate structureall plugins should be placed inside the srccoreplugins folder.the folder structure is very specific.it consists of several folders inside your main folder. server   this should all be serverside code client   this should all be clientside code shared   this should be shared between server client and webview webview   this is a webview page you want to inject   does not support images sounds etc. they belong in the srcwebviewspublic folder srccorepluginscoreexample  dependencies.json   client        index.ts           src              file1.ts            file2.ts            file3.ts     server        index.ts           src            file1.ts            file2.ts            file3.ts     shared        file1.ts        file2.ts        file3.ts     webview         example.vue         tsconfig.json       images           myimage.jpg           myotherimage.png            components             component1.vue             component2.vue             component3.vue namingrules for files and folders plugins should use kebabcase for folder names.   ie. doorplugin file names should be camelcase.   ie. maindoorcontroller.ts plugins should use their respective folders for imports   server srccorepluginsexamplepluginserver     the main import file for the plugin should be called index.ts.   client srccorepluginsexamplepluginclient     the main import file for the plugin should be called index.ts.   shared srccorepluginsexamplepluginshared   webview srccorepluginsexamplepluginwebview     there must be a main .vue file in this folder.     keep all components and additional vue files in subfolders.       images srccorepluginsexamplepluginwebviewimages          must be jpg png jpeg gif or webm  entry file for a plugin should be index.ts   this applies to both client and server.it is up to you as the plugin creator to provide good instructions on installation and removal of the plugin. dependenciesif you have serverside dependencies for an npm package you can create a dependencies.json in the root of your plugin structure to autoinstall dependencies for an enduser.json    dependencies       discord.jslatest        devdependencies       glob    dependencies in devdependencies will not be installed during production mode of the server. meaning if you want to use an npm package in the game mode you should put it in dependencies._example dependencies.json_ registering a server pluginin your plugins index file you should register your plugin.typescriptimport  as alt from altserverimport  pluginsystem  from ....serversystemspluginsconst plugin_name  example pluginpluginsystem.registerpluginplugin_name        initialize other things for your plugin here...    alt.loglgplugin_name was loaded learn from examplelast but not least you should always look at the existing plugins to get a general idea of how they work and how theyre being implemented. there are plenty of them to look at in the core framework and there are additional plugins available in the athena discord.",link:"/plugins/creating-plugins"},{title:"Loading Plugins",content:"  frontmatter.title  learn to load pluginsall plugins should be placed inside the srccoreplugins folder.this can be done by performing a submodule clone or simply downloading the resource files and dragging and dropping them into the folder. structurethe folder structure is very specific.it consists of several folders inside your main folder. server   this should all be serverside code client   this should all be clientside code shared   this should be shared between server client and webview webview   this is a webview page you want to inject srccorepluginscoreexample   client        index.ts           src              file1.ts            file2.ts            file3.ts     server        index.ts           src            file1.ts            file2.ts            file3.ts     shared        file1.ts        file2.ts        file3.ts     webview         example.vue         tsconfig.json             components             component1.vue             component2.vue             component3.vue enabling  disabling pluginsin order to disable a plugin create a file with one of the following names from the list below inside the root folder of the plugin srccorepluginsyourplugin disable.plugin disabled.plugin disable",link:"/plugins/loading-plugins"},{title:"Your First Plugin",content:"exclusivepage pathfilestutorialsfirstplugin.md ",link:"/subscriber/tutorials/beginners/first-plugin"},{title:"TypeScript Tutorial",content:"exclusivepage pathfilestutorialsstartingwithtypescript.md ",link:"/subscriber/tutorials/beginners/starting-with-typescript"},{title:"Character Document",content:"exclusivepage pathfilestutorialscharacterdocument.md ",link:"/subscriber/tutorials/database/character-document"},{title:"Introduction",content:"  frontmatter.title these tutorials are not public facing. if you wish to access them you can subscribe with a membership on the official athena framework discord serverhttpsares.stuyk.comv1getdiscord.you can see the various tutorials in the sidebar.",link:"/subscriber/tutorials/index"},{title:"Items Explained",content:"exclusivepage pathfilestutorialsitemsexplained.md ",link:"/subscriber/tutorials/inventory/items-explained"},{title:"Toolkit",content:"toolkit ",link:"/tools/toolkit"},{title:"Submitting User Plugins",content:"  frontmatter.title user plugins are submitted to the main documentation repository. how to submit a plugin fork the repositoryvisit the following repository and fork it.httpsgithub.comstuykathenadocsvitepresshttpsgithub.comstuykathenadocsvitepressif you have an existing fork you need to catch up with the main repository or simply refork it by deleting your fork and making another. modify the plugin listafter forking the repository modify your version of the forked repository and add a new folder under docsplugins.this folder should be the name of your github public profile.make sure to create an index.js file under the new folder as well.ie. pluginsstuykindex.jsmodify your new file and follow the format belowjsmodule.exports               title template plugin         repo altvathenaplugintemplate         branch main      create a pull requestvisit the following link httpsgithub.comstuykathenadocsvitepresspullshttpsgithub.comstuykathenadocsvitepresspullsclick on new pull request on the righthand side.click compare across forks.httpsi.imgur.comka4j9un.pngfind the repository you modified and select it for the head repository.httpsi.imgur.comwbcmflg.pnga big green button will say create pull request. click it.submit the pr.",link:"/user-plugins/index"},{title:"Open Source Shop",content:"userplugin titleopen source shop authorbooster1212 repoopensourceshop branchmain ",link:"/user-plugins/readmes/booster1212/open-source-shop"},{title:"Attachment Editor",content:"userplugin titleattachment editor authorbooster1212 repopluginattachmenteditor branchmain ",link:"/user-plugins/readmes/booster1212/plugin-attachmenteditor"},{title:"OS-Farming System",content:"userplugin titleosfarming system authorbooster1212 repopluginfarmingsystem branchmain ",link:"/user-plugins/readmes/booster1212/plugin-farmingsystem"},{title:"Faction Docs",content:"userplugin titlefaction docs authordexslab reporolelifefactiondocs branchmain ",link:""},{title:"Doorlocker",content:"userplugin titledoorlocker authoritsspencer repoathenaplugindoorlocker branchmain ",link:"/user-plugins/readmes/itsspencer/athena-plugin-doorlocker"},{title:"Tackling",content:"userplugin titletackling authoritsspencer repoathenaplugintackling branchmain ",link:"/user-plugins/readmes/itsspencer/athena-plugin-tackling"},{title:"Flatbed",content:"userplugin titleflatbed authorjonasesser repogpflatbed branchmain ",link:"/user-plugins/readmes/jonasesser/gp-flatbed"},{title:"Interior",content:"userplugin titleinterior authorjonasesser repogpinteriors branchmain ",link:"/user-plugins/readmes/jonasesser/gp-interiors"},{title:"Portal",content:"userplugin titleportal authorjonasesser repogpportal branchmain ",link:"/user-plugins/readmes/jonasesser/gp-portal"},{title:"Shop",content:"userplugin titleshop authorjonasesser repogpshop branchmain ",link:"/user-plugins/readmes/jonasesser/gp-shop"},{title:"Phone Demo",content:"userplugin titlephone demo authorjonasesser repogpvoicedemophone branchmain ",link:"/user-plugins/readmes/jonasesser/gp-voice-demophone"},{title:"Omega Actions",content:"userplugin titleomega actions authorlocutus1119 repoathenapluginomegaactions branchmain ",link:"/user-plugins/readmes/locutus1119/athena-plugin-omega-actions"},{title:"Omega Homeless",content:"userplugin titleomega homeless authorlocutus1119 repoathenapluginomegahomeless branchonline ",link:"/user-plugins/readmes/locutus1119/athena-plugin-omega-homeless"},{title:"Omega Player List",content:"userplugin titleomega player list authorlocutus1119 repoathenapluginomegaplayerlist branchmain ",link:"/user-plugins/readmes/locutus1119/athena-plugin-omega-player-list"},{title:"Omega Vehicle Rental",content:"userplugin titleomega vehicle rental authorlocutus1119 repoathenapluginomegavehiclerental branchmain ",link:"/user-plugins/readmes/locutus1119/athena-plugin-omega-vehicle-rental"},{title:"Even More Jobs",content:"userplugin titleeven more jobs authormcwulf1991 repoevenmorejobs branchmain ",link:"/user-plugins/readmes/mcwulf1991/even-more-jobs"},{title:"Tuning Shop",content:"userplugin titletuning shop authormcwulf1991 repoplugincoretuningshop branchmain ",link:"/user-plugins/readmes/mcwulf1991/plugin-core-tuningshop"},{title:"Job Activate Power",content:"userplugin titlejob activate power authorshakirplayz repojobactivatepower branchmain ",link:"/user-plugins/readmes/shakirplayz/job-activate-power"},{title:"Plugin Template",content:"userplugin titleplugin template authorstuyk repoaltvathenaplugintemplate branchmaster ",link:"/user-plugins/readmes/stuyk/altv-athena-plugin-template"},{title:"Terms of Use",content:"  frontmatter.title any abuse of the plugin page will result in immediate ban and termination from the following repository participation discordyou must abide by githubs terms of servicehttpsdocs.github.comensitepolicygithubtermsgithubtermsofservice when submitting your plugin.failure to abide by githubs terms of service may result in a much deeper punishment not handled by the developers of the athena framework. removing a pluginif you wish to see a plugin removed and for good reason please bring it up in our discord server.",link:"/user-plugins/terms-of-use"}],o={data:t,regexForContentStripping:e};export{o as default};
