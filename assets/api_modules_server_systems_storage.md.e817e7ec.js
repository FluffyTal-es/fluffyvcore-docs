import{_ as a,c as r,x as e,a as s,t as o,S as l,o as d}from"./chunks/framework.175b5f45.js";const x=JSON.parse('{"title":"Athena.systems.storage","description":"","frontmatter":{"title":"Athena.systems.storage","outline":[1,3],"order":0},"headers":[],"relativePath":"api/modules/server_systems_storage.md","lastUpdated":null}'),n={name:"api/modules/server_systems_storage.md"},i={id:"frontmatter-title",tabindex:"-1"},c=e("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1),h=l('<h2 id="interfaces" tabindex="-1">Interfaces <a class="header-anchor" href="#interfaces" aria-label="Permalink to &quot;Interfaces&quot;">​</a></h2><ul><li><a href="./../interfaces/server_systems_storage_StorageInstance">StorageInstance</a></li></ul><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><h3 id="closeondisconnect" tabindex="-1">closeOnDisconnect <a class="header-anchor" href="#closeondisconnect" aria-label="Permalink to &quot;closeOnDisconnect&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">Usage</p><p>Athena.systems.storage.<strong>closeOnDisconnect</strong>(<code>player</code>, <code>id</code>): <code>boolean</code></p></div><p>Marks the storage instance as closed if the player disconnects.</p><p>Automatically removes the player when <code>removeAsOpen</code> is called.</p><p>Returns false if a player binding is already present.</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>player</code></td><td style="text-align:left;"><code>Player</code></td><td style="text-align:left;">An alt:V Player Entity</td></tr><tr><td style="text-align:left;"><code>id</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"></td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/9c5aa90/src/core/server/systems/storage.ts#L154" target="_blank" rel="noreferrer">server/systems/storage.ts:154</a></p><hr><h3 id="create" tabindex="-1">create <a class="header-anchor" href="#create" aria-label="Permalink to &quot;create&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">Usage</p><p>Athena.systems.storage.<strong>create</strong>(<code>items</code>): <code>Promise</code>&lt;<code>string</code>&gt;</p></div><p>Creates a new storage, and returns the &#39;_id&#39; of the storage from the database.</p><p>Use the ID returned to fetch the data with the other storage functions.</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>items</code></td><td style="text-align:left;"><code>StoredItem</code>[]</td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>string</code>&gt;</p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/9c5aa90/src/core/server/systems/storage.ts#L42" target="_blank" rel="noreferrer">server/systems/storage.ts:42</a></p><hr><h3 id="get" tabindex="-1">get <a class="header-anchor" href="#get" aria-label="Permalink to &quot;get&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">Usage</p><p>Athena.systems.storage.<strong>get</strong>&lt;<code>CustomData</code>&gt;(<code>id</code>): <code>Promise</code>&lt;<a href="./server_config#player"><code>player</code></a>&lt;<code>CustomData</code>&gt;[]&gt;</p></div><p>Fetches stored items from a storage array.</p><h4 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>CustomData</code></td><td style="text-align:left;">{}</td></tr></tbody></table><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>id</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<a href="./server_config#player"><code>player</code></a>&lt;<code>CustomData</code>&gt;[]&gt;</p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/9c5aa90/src/core/server/systems/storage.ts#L72" target="_blank" rel="noreferrer">server/systems/storage.ts:72</a></p><hr><h3 id="isopen" tabindex="-1">isOpen <a class="header-anchor" href="#isopen" aria-label="Permalink to &quot;isOpen&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">Usage</p><p>Athena.systems.storage.<strong>isOpen</strong>(<code>id</code>): <code>boolean</code></p></div><p>Checks if a storage identifier is currently in use.</p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>id</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/9c5aa90/src/core/server/systems/storage.ts#L108" target="_blank" rel="noreferrer">server/systems/storage.ts:108</a></p><hr><h3 id="removeasopen" tabindex="-1">removeAsOpen <a class="header-anchor" href="#removeasopen" aria-label="Permalink to &quot;removeAsOpen&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">Usage</p><p>Athena.systems.storage.<strong>removeAsOpen</strong>(<code>id</code>): <code>boolean</code></p></div><p>Removes the storage identifier from in-use status.</p><p>Returns true if the value was successfully removed.</p><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>id</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><h4 id="defined-in-4" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-4" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/9c5aa90/src/core/server/systems/storage.ts#L121" target="_blank" rel="noreferrer">server/systems/storage.ts:121</a></p><hr><h3 id="set" tabindex="-1">set <a class="header-anchor" href="#set" aria-label="Permalink to &quot;set&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">Usage</p><p>Athena.systems.storage.<strong>set</strong>(<code>id</code>, <code>items</code>): <code>Promise</code>&lt;<code>boolean</code>&gt;</p></div><p>Stores items into a database instance by providing the storage identifier, and the modified items array.</p><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>id</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>items</code></td><td style="text-align:left;"><code>StoredItem</code>[]</td></tr></tbody></table><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>boolean</code>&gt;</p><h4 id="defined-in-5" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-5" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/9c5aa90/src/core/server/systems/storage.ts#L60" target="_blank" rel="noreferrer">server/systems/storage.ts:60</a></p><hr><h3 id="setasopen" tabindex="-1">setAsOpen <a class="header-anchor" href="#setasopen" aria-label="Permalink to &quot;setAsOpen&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">Usage</p><p>Athena.systems.storage.<strong>setAsOpen</strong>(<code>id</code>): <code>boolean</code></p></div><p>Sets a storage identifier as in use.</p><p>Returns true if the value was set to in-use, and didn&#39;t already exist.</p><h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>id</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><h4 id="defined-in-6" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-6" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/9c5aa90/src/core/server/systems/storage.ts#L91" target="_blank" rel="noreferrer">server/systems/storage.ts:91</a></p>',79);function m(t,p,u,f,b,g){return d(),r("div",null,[e("h1",i,[s(o(t.$frontmatter.title)+" ",1),c]),h])}const k=a(n,[["render",m]]);export{x as __pageData,k as default};
