import{_ as r,c as t,x as e,a as n,t as o,S as d,o as i}from"./chunks/framework.74a8bdba.js";const u=JSON.parse('{"title":"AthenaShared.interfaces.iPedInfo.PedInfo","description":"","frontmatter":{"title":"AthenaShared.interfaces.iPedInfo.PedInfo","outline":[1,3],"order":0},"headers":[],"relativePath":"api/interfaces/shared_interfaces_iPedInfo_PedInfo.md","lastUpdated":null}'),s={name:"api/interfaces/shared_interfaces_iPedInfo_PedInfo.md"},h={id:"frontmatter-title",tabindex:"-1"},f=e("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1),c=d('<p><a href="./../modules/shared_interfaces_iPedInfo">shared/interfaces/iPedInfo</a>.PedInfo</p><p>Interface for working with / using peds.</p><p><strong><code>Export</code></strong></p><p><strong><code>Interface</code></strong></p><p>PedInfo</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="hash" tabindex="-1">hash <a class="header-anchor" href="#hash" aria-label="Permalink to &quot;hash&quot;">​</a></h3><p>• <strong>hash</strong>: <code>number</code></p><p>The hash of this ped model.</p><p><strong><code>Memberof</code></strong></p><p>PedInfo</p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/1862056/src/core/shared/interfaces/iPedInfo.ts#L22" target="_blank" rel="noreferrer">shared/interfaces/iPedInfo.ts:22</a></p><hr><h3 id="hexhash" tabindex="-1">hexHash <a class="header-anchor" href="#hexhash" aria-label="Permalink to &quot;hexHash&quot;">​</a></h3><p>• <strong>hexHash</strong>: <code>string</code></p><p>The hex hash of this ped model.</p><p><strong><code>Memberof</code></strong></p><p>PedInfo</p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/1862056/src/core/shared/interfaces/iPedInfo.ts#L36" target="_blank" rel="noreferrer">shared/interfaces/iPedInfo.ts:36</a></p><hr><h3 id="name" tabindex="-1">name <a class="header-anchor" href="#name" aria-label="Permalink to &quot;name&quot;">​</a></h3><p>• <strong>name</strong>: <code>string</code></p><p>The model of the ped.</p><p><strong><code>Memberof</code></strong></p><p>PedInfo</p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/1862056/src/core/shared/interfaces/iPedInfo.ts#L15" target="_blank" rel="noreferrer">shared/interfaces/iPedInfo.ts:15</a></p><hr><h3 id="pedtype" tabindex="-1">pedType <a class="header-anchor" href="#pedtype" aria-label="Permalink to &quot;pedType&quot;">​</a></h3><p>• <strong>pedType</strong>: <code>PED_TYPE</code></p><p>The ped type;</p><p><strong><code>Memberof</code></strong></p><p>PedInfo</p><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/1862056/src/core/shared/interfaces/iPedInfo.ts#L43" target="_blank" rel="noreferrer">shared/interfaces/iPedInfo.ts:43</a></p><hr><h3 id="signedhash" tabindex="-1">signedHash <a class="header-anchor" href="#signedhash" aria-label="Permalink to &quot;signedHash&quot;">​</a></h3><p>• <strong>signedHash</strong>: <code>number</code></p><p>The signed hash of this ped model.</p><p><strong><code>Memberof</code></strong></p><p>PedInfo</p><h4 id="defined-in-4" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-4" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/1862056/src/core/shared/interfaces/iPedInfo.ts#L29" target="_blank" rel="noreferrer">shared/interfaces/iPedInfo.ts:29</a></p>',45);function p(a,l,b,P,g,m){return i(),t("div",null,[e("h1",h,[n(o(a.$frontmatter.title)+" ",1),f]),c])}const I=r(s,[["render",p]]);export{u as __pageData,I as default};
