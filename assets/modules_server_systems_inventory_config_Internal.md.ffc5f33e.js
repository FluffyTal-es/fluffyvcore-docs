import{_ as e,o as t,c as o,V as r}from"./chunks/framework.7ae304b1.js";const g=JSON.parse('{"title":"FluffyVServer.systems.inventory.config.Internal","description":"","frontmatter":{"title":"FluffyVServer.systems.inventory.config.Internal","outline":[0,5],"order":0},"headers":[],"relativePath":"modules/server_systems_inventory_config_Internal.md","filePath":"modules/server_systems_inventory_config_Internal.md","lastUpdated":null}'),n={name:"modules/server_systems_inventory_config_Internal.md"},a=r('<h1 id="fluffyvserver-systems-inventory-config-internal" tabindex="-1">FluffyVServer.systems.inventory.config.Internal <a class="header-anchor" href="#fluffyvserver-systems-inventory-config-internal" aria-label="Permalink to &quot;FluffyVServer.systems.inventory.config.Internal&quot;">​</a></h1><h2 id="variables" tabindex="-1">Variables <a class="header-anchor" href="#variables" aria-label="Permalink to &quot;Variables&quot;">​</a></h2><h3 id="default-config" tabindex="-1">DEFAULT_CONFIG <a class="header-anchor" href="#default-config" aria-label="Permalink to &quot;DEFAULT\\_CONFIG&quot;">​</a></h3><p>• <strong>DEFAULT_CONFIG</strong>: <code>Object</code></p><p>Do not modify this directly. These are used as internal values. Use the config setter / getter in ItemManager system to modify.</p><h4 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>custom</code></td><td style="text-align:left;">{ <code>size</code>: <code>number</code> = 256 }</td></tr><tr><td style="text-align:left;"><code>custom.size</code></td><td style="text-align:left;"><code>number</code></td></tr><tr><td style="text-align:left;"><code>inventory</code></td><td style="text-align:left;">{ <code>size</code>: <code>number</code> = 30 }</td></tr><tr><td style="text-align:left;"><code>inventory.size</code></td><td style="text-align:left;"><code>number</code></td></tr><tr><td style="text-align:left;"><code>toolbar</code></td><td style="text-align:left;">{ <code>size</code>: <code>number</code> = 4 }</td></tr><tr><td style="text-align:left;"><code>toolbar.size</code></td><td style="text-align:left;"><code>number</code></td></tr><tr><td style="text-align:left;"><code>weight</code></td><td style="text-align:left;">{ <code>enabled</code>: <code>boolean</code> = true; <code>player</code>: <code>number</code> = 64 }</td></tr><tr><td style="text-align:left;"><code>weight.enabled</code></td><td style="text-align:left;"><code>boolean</code></td></tr><tr><td style="text-align:left;"><code>weight.player</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/FluffyTal-es/FluffyV/blob/9a39bba/src/fv-core/server/systems/inventory/config.ts#L10" target="_blank" rel="noreferrer">server/systems/inventory/config.ts:10</a></p>',9),d=[a];function l(s,i,c,f,y,_){return t(),o("div",null,d)}const m=e(n,[["render",l]]);export{g as __pageData,m as default};
