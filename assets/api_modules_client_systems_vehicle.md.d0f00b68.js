import{_ as l,c as d,x as e,a as o,t as a,S as c,o as i}from"./chunks/framework.74a8bdba.js";const v=JSON.parse('{"title":"AthenaClient.systems.vehicle","description":"","frontmatter":{"title":"AthenaClient.systems.vehicle","outline":[1,3],"order":0},"headers":[],"relativePath":"api/modules/client_systems_vehicle.md","lastUpdated":null}'),r={name:"api/modules/client_systems_vehicle.md"},n={id:"frontmatter-title",tabindex:"-1"},s=e("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1),h=c('<h2 id="variables" tabindex="-1">Variables <a class="header-anchor" href="#variables" aria-label="Permalink to &quot;Variables&quot;">​</a></h2><h3 id="vehiclecontroller" tabindex="-1">VehicleController <a class="header-anchor" href="#vehiclecontroller" aria-label="Permalink to &quot;VehicleController&quot;">​</a></h3><p>• <code>Const</code> <strong>VehicleController</strong>: <code>Object</code></p><h4 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>emitEngine</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>emitLock</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>enableSeatBelt</code></td><td style="text-align:left;">(<code>value?</code>: <code>boolean</code>) =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>enterVehicle</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>handleVehicleDisables</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>registerKeybinds</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>removeSeatBelt</code></td><td style="text-align:left;">(<code>vehicle</code>: <code>Vehicle</code>) =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>setIntoVehicle</code></td><td style="text-align:left;">(<code>vehicle</code>: <code>Vehicle</code>, <code>seat</code>: <code>number</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</td></tr><tr><td style="text-align:left;"><code>toggleEngine</code></td><td style="text-align:left;">(<code>status</code>: <code>boolean</code>) =&gt; <code>void</code></td></tr></tbody></table><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/97e73cc/src/core/client/systems/vehicle.ts#L22" target="_blank" rel="noreferrer">client/systems/vehicle.ts:22</a></p>',7);function f(t,g,y,_,m,b){return i(),d("div",null,[e("h1",n,[o(a(t.$frontmatter.title)+" ",1),s]),h])}const p=l(r,[["render",f]]);export{v as __pageData,p as default};
