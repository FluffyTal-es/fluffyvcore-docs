import{_ as a,c as r,x as t,a as d,t as s,S as o,o as l}from"./chunks/framework.175b5f45.js";const x=JSON.parse('{"title":"Athena.utility.hash","description":"","frontmatter":{"title":"Athena.utility.hash","outline":[1,3],"order":0},"headers":[],"relativePath":"api/modules/server_utility_hash.md","lastUpdated":1679789448000}'),i={name:"api/modules/server_utility_hash.md"},n={id:"frontmatter-title",tabindex:"-1"},h=t("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1),c=o('<h2 id="variables" tabindex="-1">Variables <a class="header-anchor" href="#variables" aria-label="Permalink to &quot;Variables&quot;">​</a></h2><h3 id="default" tabindex="-1">default <a class="header-anchor" href="#default" aria-label="Permalink to &quot;default&quot;">​</a></h3><p>• <strong>default</strong>: <code>Object</code></p><h4 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>hashPassword</code></td><td style="text-align:left;">(<code>plainTextPassword</code>: <code>string</code>) =&gt; <code>string</code></td></tr><tr><td style="text-align:left;"><code>sha256</code></td><td style="text-align:left;">(<code>data</code>: <code>string</code>) =&gt; <code>string</code></td></tr><tr><td style="text-align:left;"><code>sha256Random</code></td><td style="text-align:left;">(<code>data</code>: <code>string</code>) =&gt; <code>string</code></td></tr><tr><td style="text-align:left;"><code>testPassword</code></td><td style="text-align:left;">(<code>plainTextPassword</code>: <code>string</code>, <code>pbkdf2Hash</code>: <code>string</code>) =&gt; <code>boolean</code></td></tr></tbody></table><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/552012ca4/src/core/server/utility/hash.ts#L51" target="_blank" rel="noreferrer">server/utility/hash.ts:51</a></p><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><h3 id="hashpassword" tabindex="-1">hashPassword <a class="header-anchor" href="#hashpassword" aria-label="Permalink to &quot;hashPassword&quot;">​</a></h3><p>▸ <strong>hashPassword</strong>(<code>plainTextPassword</code>): <code>string</code></p><p>Hash a plain text password with pbkdf2 hash and salt.</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>plainTextPassword</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>string</code></p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/552012ca4/src/core/server/utility/hash.ts#L8" target="_blank" rel="noreferrer">server/utility/hash.ts:8</a></p><hr><h3 id="sha256" tabindex="-1">sha256 <a class="header-anchor" href="#sha256" aria-label="Permalink to &quot;sha256&quot;">​</a></h3><p>▸ <strong>sha256</strong>(<code>data</code>): <code>string</code></p><p>Hash a string of data into a persistent SHA256 hash.</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>data</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>string</code></p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/552012ca4/src/core/server/utility/hash.ts#L35" target="_blank" rel="noreferrer">server/utility/hash.ts:35</a></p><hr><h3 id="sha256random" tabindex="-1">sha256Random <a class="header-anchor" href="#sha256random" aria-label="Permalink to &quot;sha256Random&quot;">​</a></h3><p>▸ <strong>sha256Random</strong>(<code>data</code>): <code>string</code></p><p>Hash a string of data into a random SHA256 hash.</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>data</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>string</code></p><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/552012ca4/src/core/server/utility/hash.ts#L46" target="_blank" rel="noreferrer">server/utility/hash.ts:46</a></p><hr><h3 id="testpassword" tabindex="-1">testPassword <a class="header-anchor" href="#testpassword" aria-label="Permalink to &quot;testPassword&quot;">​</a></h3><p>▸ <strong>testPassword</strong>(<code>plainTextPassword</code>, <code>pbkdf2Hash</code>): <code>boolean</code></p><p>Test a pbkdf2 hash and salt against a plain text password.</p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>plainTextPassword</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>pbkdf2Hash</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><h4 id="defined-in-4" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-4" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Stuyk/altv-athena/blob/552012ca4/src/core/server/utility/hash.ts#L21" target="_blank" rel="noreferrer">server/utility/hash.ts:21</a></p>',47);function f(e,u,b,p,g,m){return l(),r("div",null,[t("h1",n,[d(s(e.$frontmatter.title)+" ",1),h]),c])}const P=a(i,[["render",f]]);export{x as __pageData,P as default};
