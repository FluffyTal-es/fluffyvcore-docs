import{_ as a,c as n,x as e,a as r,t as i,S as s,o as l}from"./chunks/framework.175b5f45.js";const y=JSON.parse('{"title":"AthenaShared.utility.flags.Internal.EventTarget","description":"","frontmatter":{"title":"AthenaShared.utility.flags.Internal.EventTarget","outline":[1,3],"order":0},"headers":[],"relativePath":"api/interfaces/shared_utility_flags_Internal_EventTarget.md","lastUpdated":1679789238000}'),d={name:"api/interfaces/shared_utility_flags_Internal_EventTarget.md"},o={id:"frontmatter-title",tabindex:"-1"},h=e("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1),c=s('<p><a href="./../modules/shared_utility_flags">shared/utility/flags</a>.<a href="./../modules/shared_utility_flags_Internal">Internal</a>.EventTarget</p><p>EventTarget is a DOM interface implemented by objects that can receive events and may have listeners for them.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="addeventlistener" tabindex="-1">addEventListener <a class="header-anchor" href="#addeventlistener" aria-label="Permalink to &quot;addEventListener&quot;">​</a></h3><p>▸ <strong>addEventListener</strong>(<code>type</code>, <code>callback</code>, <code>options?</code>): <code>void</code></p><p>Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.</p><p>The options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options&#39;s capture.</p><p>When set to true, options&#39;s capture prevents callback from being invoked when the event&#39;s eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event&#39;s eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event&#39;s eventPhase attribute value is AT_TARGET.</p><p>When set to true, options&#39;s passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.</p><p>When set to true, options&#39;s once indicates that the callback will only be invoked once after which the event listener will be removed.</p><p>If an AbortSignal is passed for options&#39;s signal, then the event listener will be removed when signal is aborted.</p><p>The event listener is appended to target&#39;s event listener list and is not appended if it has the same type, callback, and capture.</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>type</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>callback</code></td><td style="text-align:left;"><a href="./../modules/shared_utility_flags_Internal#EventListenerOrEventListenerObject"><code>EventListenerOrEventListenerObject</code></a></td></tr><tr><td style="text-align:left;"><code>options?</code></td><td style="text-align:left;"><code>boolean</code> | <a href="./shared_utility_flags_Internal_AddEventListenerOptions"><code>AddEventListenerOptions</code></a></td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>../../node_modules/typescript/lib/lib.dom.d.ts:5031</p><hr><h3 id="dispatchevent" tabindex="-1">dispatchEvent <a class="header-anchor" href="#dispatchevent" aria-label="Permalink to &quot;dispatchEvent&quot;">​</a></h3><p>▸ <strong>dispatchEvent</strong>(<code>event</code>): <code>boolean</code></p><p>Dispatches a synthetic event event to target and returns true if either event&#39;s cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise.</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>event</code></td><td style="text-align:left;"><a href="./../modules/shared_utility_flags_Internal#Event"><code>Event</code></a></td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>../../node_modules/typescript/lib/lib.dom.d.ts:5033</p><hr><h3 id="removeeventlistener" tabindex="-1">removeEventListener <a class="header-anchor" href="#removeeventlistener" aria-label="Permalink to &quot;removeEventListener&quot;">​</a></h3><p>▸ <strong>removeEventListener</strong>(<code>type</code>, <code>callback</code>, <code>options?</code>): <code>void</code></p><p>Removes the event listener in target&#39;s event listener list with the same type, callback, and options.</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>type</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>callback</code></td><td style="text-align:left;"><a href="./../modules/shared_utility_flags_Internal#EventListenerOrEventListenerObject"><code>EventListenerOrEventListenerObject</code></a></td></tr><tr><td style="text-align:left;"><code>options?</code></td><td style="text-align:left;"><code>boolean</code> | <a href="./shared_utility_flags_Internal_EventListenerOptions"><code>EventListenerOptions</code></a></td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>../../node_modules/typescript/lib/lib.dom.d.ts:5035</p>',38);function p(t,f,v,b,u,m){return l(),n("div",null,[e("h1",o,[r(i(t.$frontmatter.title)+" ",1),h]),c])}const g=a(d,[["render",p]]);export{y as __pageData,g as default};
